name: Build and Publish Docker Image
on:
  push:
    branches: ["main"]
    tags: ['v*.*.*']
  pull_request:
    branches: ["main"]
env:
  REGISTRY_DOCKERHUB: wenrix
  REGISTRY_DOCKERHUB_ADDITIONAL: wenrix/channel-proxy
  REGISTRY_ECR: public.ecr.aws/wenrix
  IMAGE_NAME: channel-proxy
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_DOCKERHUB }}/${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY_DOCKERHUB_ADDITIONAL }}/${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY_ECR }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest
      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Log in to Additional Docker Hub Account
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.ADDITIONAL_DOCKERHUB_USERNAME }}
          password: ${{ secrets.ADDITIONAL_DOCKERHUB_TOKEN }}
          registry: docker.io
      - name: Log in to AWS ECR Public
        if: github.event_name != 'pull_request'
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
        env:
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: docker/
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
