events {}

daemon off;

http {
    server {
        listen $WP_SERVER_PORT;

        $WP_SERVER_TLS_DIRECTIVES

        $WP_SERVER_FILE_INCLUDES
        
        keepalive_timeout 70;

        gzip on;

        auth_basic "$WP_SERVER_BASIC_AUTH";
        auth_basic_user_file /etc/nginx/.htpasswd;

        # Drop HTTP headers that are not needed (Wenrix headers)
        proxy_hide_header x-wenrix-operation;
        proxy_hide_header x-wenrix-trace-id;
        proxy_hide_header authorization;
        proxy_hide_header x-real-ip;
        proxy_hide_header x-forwarded-for;

        location = / {
            return 200 'Welcome to Wenrix Proxy\n';
        }

        resolver $WP_SERVER_RESOLVER;

        location ~ ^/channel/britishairways/(.*) {
            proxy_pass $WP_CHANNELS_BA_PROXY_PASS/$1;
            proxy_set_header Host $WP_CHANNELS_BA_HOST;
            proxy_ssl_server_name on;
            proxy_connect_timeout 30;
            proxy_send_timeout 120;
            proxy_read_timeout 120;
            send_timeout 120;
            
            # Add the Authorization header
            proxy_set_header Client-Key "$WP_CHANNELS_BA_API_KEY";
        }

        location /channel/travelfusion {
            proxy_pass $WP_CHANNELS_TRAVELFUSION_PROXY_PASS;
            proxy_set_header Host $WP_CHANNELS_TRAVELFUSION_HOST;
            proxy_set_header Content-Type text/xml;
            proxy_ssl_server_name on;
            proxy_connect_timeout 30;
            proxy_send_timeout 120;
            proxy_read_timeout 120;
            send_timeout 120;
            
            lua_need_request_body on;

            access_by_lua_block
            {
               local login_id = "$WP_CHANNELS_TRAVELFUSION_LOGIN_ID"
               ngx.req.read_body()
               local body = ngx.req.get_body_data()
               if body then
                  body = ngx.re.gsub(body, "<LoginId>PLACEHOLDER</LoginId>", "<LoginId>" .. login_id .. "</LoginId>")
                  body = ngx.re.gsub(body, "<XmlLoginId>PLACEHOLDER</XmlLoginId>", "<XmlLoginId>" .. login_id .. "</XmlLoginId>")
               end
               ngx.req.set_body_data(body)
            }
        }

        location ~ ^/channel/farelogix-aa/(.*) {
            proxy_pass $WP_CHANNELS_FARELOGIX_AA_PROXY_PASS/$1;
            proxy_set_header Host $WP_CHANNELS_FARELOGIX_AA_HOST;
            proxy_ssl_server_name on;
            proxy_connect_timeout 30;
            proxy_send_timeout 120;
            proxy_read_timeout 120;
            send_timeout 120;

            # Add API key header
            proxy_set_header Ocp-Apim-Subscription-Key "$WP_CHANNELS_FARELOGIX_AA_API_KEY";

            lua_need_request_body on;

            access_by_lua_block {
                local agent = "$WP_CHANNELS_FARELOGIX_AA_AGENT"
                local username = "$WP_CHANNELS_FARELOGIX_AA_USERNAME"
                local password = "$WP_CHANNELS_FARELOGIX_AA_PASSWORD"
                local agent_user = "$WP_CHANNELS_FARELOGIX_AA_AGENT_USER"
                local agent_password = "$WP_CHANNELS_FARELOGIX_AA_AGENT_PASSWORD"

                ngx.req.read_body()
                local body = ngx.req.get_body_data()
                if body then
                    body = ngx.re.gsub(body, "#FLX_USERNAME#", username)
                    body = ngx.re.gsub(body, "#FLX_PASSWORD#", password)
                    body = ngx.re.gsub(body, "#FLX_AGENT#", agent)
                    body = ngx.re.gsub(body, "#FLX_AGENT_USER#", agent_user)
                    body = ngx.re.gsub(body, "#FLX_AGENT_PASSWORD#", agent_password)
                end
                ngx.req.set_body_data(body)
            }
        }

        location ~ ^/channel/farelogix-lh/(.*) {
            proxy_pass $WP_CHANNELS_FARELOGIX_LH_PROXY_PASS/$1;
            proxy_set_header Host $WP_CHANNELS_FARELOGIX_LH_HOST;
            proxy_ssl_server_name on;
            proxy_connect_timeout 30;
            proxy_send_timeout 120;
            proxy_read_timeout 120;
            send_timeout 120;

            # Add API key header
            proxy_set_header Ocp-Apim-Subscription-Key "$WP_CHANNELS_FARELOGIX_LH_API_KEY";

            lua_need_request_body on;

            access_by_lua_block {
                local agent = "$WP_CHANNELS_FARELOGIX_LH_AGENT"
                local username = "$WP_CHANNELS_FARELOGIX_LH_USERNAME"
                local password = "$WP_CHANNELS_FARELOGIX_LH_PASSWORD"
                local agent_user = "$WP_CHANNELS_FARELOGIX_LH_AGENT_USER"
                local agent_password = "$WP_CHANNELS_FARELOGIX_LH_AGENT_PASSWORD"

                ngx.req.read_body()
                local body = ngx.req.get_body_data()
                if body then
                    body = ngx.re.gsub(body, "#FLX_USERNAME#", username)
                    body = ngx.re.gsub(body, "#FLX_PASSWORD#", password)
                    body = ngx.re.gsub(body, "#FLX_AGENT#", agent)
                    body = ngx.re.gsub(body, "#FLX_AGENT_USER#", agent_user)
                    body = ngx.re.gsub(body, "#FLX_AGENT_PASSWORD#", agent_password)
                end
                ngx.req.set_body_data(body)
            }
        }

        location ~ ^/channel/farelogix-ua/(.*) {
            proxy_pass $WP_CHANNELS_FARELOGIX_UA_PROXY_PASS/$1;
            proxy_set_header Host $WP_CHANNELS_FARELOGIX_UA_HOST;
            proxy_ssl_server_name on;
            proxy_connect_timeout 30;
            proxy_send_timeout 120;
            proxy_read_timeout 120;
            send_timeout 120;

            # Add API key header
            proxy_set_header Ocp-Apim-Subscription-Key "$WP_CHANNELS_FARELOGIX_UA_API_KEY";

            lua_need_request_body on;

            access_by_lua_block {
                local agent = "$WP_CHANNELS_FARELOGIX_UA_AGENT"
                local username = "$WP_CHANNELS_FARELOGIX_UA_USERNAME"
                local password = "$WP_CHANNELS_FARELOGIX_UA_PASSWORD"
                local agent_user = "$WP_CHANNELS_FARELOGIX_UA_AGENT_USER"
                local agent_password = "$WP_CHANNELS_FARELOGIX_UA_AGENT_PASSWORD"

                ngx.req.read_body()
                local body = ngx.req.get_body_data()
                if body then
                    body = ngx.re.gsub(body, "#FLX_USERNAME#", username)
                    body = ngx.re.gsub(body, "#FLX_PASSWORD#", password)
                    body = ngx.re.gsub(body, "#FLX_AGENT#", agent)
                    body = ngx.re.gsub(body, "#FLX_AGENT_USER#", agent_user)
                    body = ngx.re.gsub(body, "#FLX_AGENT_PASSWORD#", agent_password)
                end
                ngx.req.set_body_data(body)
            }
        }

        location /metrics {
           stub_status;
        }

        error_page 404 /404.html;
        location = /404.html {
            internal;
        }
    }
}